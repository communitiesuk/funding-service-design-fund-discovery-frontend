name: Manual Stress Test on Frontend
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      api:
        required: false
        default: false
        type: boolean
      users:
        required: false
        default: 1
        type: string
      spawn-rate:
        required: false
        default: 1
        type: string
      run-time:
        required: false
        default: 10s
        type: string

    secrets:
      CF_API:
        required: true
      CF_ORG:
        required: true
      CF_SPACE:
        required: true
      CF_USER:
        required: true
      CF_PASSWORD:
        required: true
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  users: 1
  spawn-rate: 1
  run-time: 10s

jobs:

  deploy_test:
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.1
      - name: create python env
        run: python -m venv .venv
      - name: install dependencies
        run: source .venv/bin/activate && python -m pip install --upgrade pip && pip install -r requirements.txt
      # - name: build static assets
      #   run: python build.py
      - name: download previous build
        uses: actions/download-artifact@v2
      - name: Deploy to Gov PaaS
        uses: citizen-of-planet-earth/cf-cli-action@v2
        with:
          cf_api:      ${{secrets.CF_API}}
          cf_org:      ${{secrets.CF_ORG}}
          cf_space:    ${{secrets.CF_SPACE }}
          cf_username: ${{secrets.CF_USER}}
          cf_password: ${{secrets.CF_PASSWORD}}
          command: push ${{inputs.app_name}}-test

  run_performance_tests:
    if:  ${{ always() && (needs.deploy_test.result=='success') }}
    needs: deploy_test
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: checkout code
        uses: actions/checkout@main
        with:
          repository: communitiesuk/funding-service-design-performance-tests
          path: ./funding-service-design-performance-tests
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.1
      - name: create python env
        run: python -m venv .venv
      - name: install dependencies
        run: source .venv/bin/activate && python -m pip install --upgrade pip && pip install -r ./funding-service-design-performance-tests/requirements.txt
      - name: Run performance tests
        run: ls && python -m pip install locust && python -m locust --users ${{inputs.users}} --spawn-rate ${{inputs.spawn-rate}} --run-time ${{inputs.run-time}}
        working-directory: ./funding-service-design-performance-tests
      - name: 'Upload Artifact'
        uses: actions/upload-artifact@v2
        with:
          name: performance-test-report
          path: ./funding-service-design-performance-tests/locust_html_report.html
          retention-days: 5
